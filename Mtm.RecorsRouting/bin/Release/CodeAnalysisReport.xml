<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft fxcop 10.0\Xml\FxCopReport.xsl"?>
<FxCopReport Version="10.0">
 <Namespaces>
  <Namespace Name="Mtm.RecordsRouting">
   <Messages>
    <Message Id="Mtm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mtm' in namespace name 'Mtm.RecordsRouting'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Mtm.RecordsRouting.Features.MtmFeature">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Mtm.RecordsRouting.Features.MtmFeature' with another namespace.</Issue>
    </Message>
    <Message Id="Mtm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mtm' in namespace name 'Mtm.RecordsRouting.Features.MtmFeature'.</Issue>
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mtm' in namespace name 'Mtm.RecordsRouting.Features.MtmFeature'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting\bin\Release\Mtm.RecordsRouting.dll">
   <Modules>
    <Module Name="mtm.recordsrouting.dll">
     <Messages>
      <Message Id="Mtm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mtm' in assembly name 'Mtm.RecordsRouting.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Mtm.RecordsRouting.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Mtm.RecordsRouting">
       <Types>
        <Type Name="RecordCentreManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordCentreManager.cs" Line="28">Change the type of parameter 'url' of method 'RecordCentreManager.RecordCentreManager(string)' from string to System.Uri, or provide an overload of 'RecordCentreManager.RecordCentreManager(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropOffRecordDocuments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;RecordDocument&gt;' in 'RecordCentreManager.DropOffRecordDocuments' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnabledLibraries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SPList&gt;' in 'RecordCentreManager.EnabledLibraries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RecordDocument" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;Microsoft.SharePoint.SPList&gt;,Microsoft.SharePoint.SPListItem,Microsoft.SharePoint.SPListItemCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="35">'RecordDocument.RecordDocument(List&lt;SPList&gt;, SPListItem, SPListItemCollection)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;RecordDocument..ctor(List&lt;SPList&gt;, SPListItem, SPListItemCollection)&#xD;&#xA;RecordDocument.TraceLog():Void&#xD;&#xA;Object.ToString():String</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="35">Change 'List&lt;SPList&gt;' in 'RecordDocument.RecordDocument(List&lt;SPList&gt;, SPListItem, SPListItemCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="OutsideDispose" Certainty="75" Level="CriticalWarning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="196">'RecordDocument.Dispose()' calls 'GC.SuppressFinalize(object)', a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForceContentTypeToLibrary(Microsoft.SharePoint.SPContentType,Microsoft.SharePoint.SPList)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="208">In member 'RecordDocument.ForceContentTypeToLibrary(SPContentType, SPList)', correct the casing of 'Sp' in parameter name 'librarySpList' by changing it to 'SP'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="208">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordDocument.ForceContentTypeToLibrary(SPContentType, SPList)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetParentContentType(Microsoft.SharePoint.SPContentType)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="265">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordDocument.GetParentContentType(SPContentType)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveToLibraryWithoutFolder(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="143">Change the type of parameter 'newUrl' of method 'RecordDocument.MoveToLibraryWithoutFolder(string)' from string to System.Uri, or provide an overload of 'RecordDocument.MoveToLibraryWithoutFolder(string)', that allows 'newUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateLibrary(System.Collections.Generic.List`1&lt;Microsoft.SharePoint.SPList&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="412">Modify 'RecordDocument.ValidateLibrary(List&lt;SPList&gt;)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateParentLibrary(System.Collections.Generic.List`1&lt;Microsoft.SharePoint.SPList&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocument.cs" Line="441">Modify 'RecordDocument.ValidateParentLibrary(List&lt;SPList&gt;)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RecordDocumentManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.SharePoint.SPListItemCollection,System.Collections.Generic.List`1&lt;Microsoft.SharePoint.SPList&gt;,Microsoft.SharePoint.SPListItemCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocumentManager.cs" Line="36">Change 'List&lt;SPList&gt;' in 'RecordDocumentManager.RecordDocumentManager(SPListItemCollection, List&lt;SPList&gt;, SPListItemCollection)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectMessage" Certainty="95" Level="CriticalError" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocumentManager.cs" Line="40">Method 'RecordDocumentManager.RecordDocumentManager(SPListItemCollection, List&lt;SPList&gt;, SPListItemCollection)' passes parameter name 'enabledLibraries' as the 'message' argument to a 'ArgumentException' constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RecordDocuments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;RecordDocument&gt;' in 'RecordDocumentManager.RecordDocuments' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScanFields(Microsoft.SharePoint.SPList,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordDocumentManager.cs" Line="78">Change the type of parameter 'dropOffLibraryUrl' of method 'RecordDocumentManager.ScanFields(SPList, string)' from string to System.Uri, or provide an overload of 'RecordDocumentManager.ScanFields(SPList, string)', that allows 'dropOffLibraryUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RecordField" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FixSPField(Microsoft.SharePoint.SPWeb,Microsoft.SharePoint.SPSite,Microsoft.SharePoint.SPListItem,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="165">In member 'RecordField.FixSPField(SPWeb, SPSite, SPListItem, string)', correct the casing of 'Sp' in parameter name 'contextSpSite' by changing it to 'SP'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="165">In member 'RecordField.FixSPField(SPWeb, SPSite, SPListItem, string)', correct the casing of 'Sp' in parameter name 'contextSpWeb' by changing it to 'SP'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="165">In member 'RecordField.FixSPField(SPWeb, SPSite, SPListItem, string)', correct the casing of 'Sp' in parameter name 'fileSpListItem' by changing it to 'SP'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FixSPFieldTypeSameUser(Microsoft.SharePoint.SPWeb,Microsoft.SharePoint.SPListItem,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="808">Modify 'RecordField.FixSPFieldTypeSameUser(SPWeb, SPListItem, string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FixSPFieldTypeUser(Microsoft.SharePoint.SPWeb,Microsoft.SharePoint.SPListItem,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="869">Modify 'RecordField.FixSPFieldTypeUser(SPWeb, SPListItem, string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLookupValue(System.Guid,Microsoft.SharePoint.SPFieldLookup,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="420">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.GetLookupValue(Guid, SPFieldLookup, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSPFieldLookupValue(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="387">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.GetSPFieldLookupValue(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSPFieldLookupValues(Microsoft.SharePoint.SPWeb,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="368">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.GetSPFieldLookupValues(SPWeb, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSPFieldLookupValues(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="346">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.GetSPFieldLookupValues(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserSPPrincipal(Microsoft.SharePoint.SPWeb,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="515">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.GetUserSPPrincipal(SPWeb, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsUserSPGroupName(Microsoft.SharePoint.SPWeb,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="497">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.IsUserSPGroupName(SPWeb, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SPFieldLookupIsMultiValue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'RecordField.SPFieldLookupIsMultiValue' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SPFieldUserIsMultiValue" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'RecordField.SPFieldUserIsMultiValue' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubStringAfter(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="318">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.SubStringAfter(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubStringBefore(System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordField.cs" Line="301">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordField.SubStringBefore(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RecordFieldManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.SharePoint.SPListItem,Microsoft.SharePoint.SPList,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="39">In member 'RecordFieldManager.RecordFieldManager(SPListItem, SPList, string, string)', correct the casing of 'Sp' in parameter name 'fileSpListItem' by changing it to 'SP'.</Issue>
            </Message>
            <Message Id="2#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="39">Change the type of parameter 'url' of method 'RecordFieldManager.RecordFieldManager(SPListItem, SPList, string, string)' from string to System.Uri, or provide an overload of 'RecordFieldManager.RecordFieldManager(SPListItem, SPList, string, string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.SharePoint.SPListItem,Microsoft.SharePoint.SPList,System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="28">In member 'RecordFieldManager.RecordFieldManager(SPListItem, SPList, string, string, bool)', correct the casing of 'Sp' in parameter name 'fileSpListItem' by changing it to 'SP'.</Issue>
            </Message>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="56">Method 'RecordFieldManager.RecordFieldManager(SPListItem, SPList, string, string, bool)' passes 'contextualSPList' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
            <Message Id="2#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="28">Change the type of parameter 'url' of method 'RecordFieldManager.RecordFieldManager(SPListItem, SPList, string, string, bool)' from string to System.Uri, or provide an overload of 'RecordFieldManager.RecordFieldManager(SPListItem, SPList, string, string, bool)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddUnmatchedLookups(Microsoft.SharePoint.SPListItem)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="210">'RecordFieldManager.AddUnmatchedLookups(SPListItem)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContextUrl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'RecordFieldManager.ContextUrl' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSPFieldIdValid(System.Guid)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="245">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordFieldManager.IsSPFieldIdValid(Guid)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSPFieldInternalNameValid(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="235">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordFieldManager.IsSPFieldInternalNameValid(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSPFieldTitleValid(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="225">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordFieldManager.IsSPFieldTitleValid(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSPFieldTypeValid(Microsoft.SharePoint.SPFieldType)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="261">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordFieldManager.IsSPFieldTypeValid(SPFieldType)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewLookupNodes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;XmlLookupNode&gt;' in 'RecordFieldManager.NewLookupNodes' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScreenXMLLookup(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="310">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'RecordFieldManager.ScreenXMLLookup(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="boo" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordFieldManager.cs" Line="132">Parameter 'boo' of 'RecordFieldManager.ToString(bool)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RecordLibraryManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordLibraryManager.cs" Line="31">Change the type of parameter 'url' of method 'RecordLibraryManager.RecordLibraryManager(string)' from string to System.Uri, or provide an overload of 'RecordLibraryManager.RecordLibraryManager(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddLibrary(Microsoft.SharePoint.SPWeb,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordLibraryManager.cs" Line="313">'RecordLibraryManager.AddLibrary(SPWeb, string, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordLibraryManager.cs" Line="313">The 'this' parameter (or 'Me' in Visual Basic) of 'RecordLibraryManager.AddLibrary(SPWeb, string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropOffLibUrl" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Change the type of property 'RecordLibraryManager.DropOffLibUrl' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnabledLibraries" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;SPList&gt;' in 'RecordLibraryManager.EnabledLibraries' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetContentTypeIndices(Mtm.RecordsRouting.RecordDocument,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordLibraryManager.cs" Line="119">Change 'List&lt;int&gt;' in 'RecordLibraryManager.GetContentTypeIndices(RecordDocument, bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordLibraryManager.cs" Line="119">Replace the term 'Indices' in member name 'RecordLibraryManager.GetContentTypeIndices(RecordDocument, bool)' with the preferred alternate 'Indexes'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScreenLibraries(Microsoft.SharePoint.SPWeb)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RecordLibraryManager.cs" Line="284">Modify 'RecordLibraryManager.ScreenLibraries(SPWeb)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RoutingRulesManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="37">Change the type of parameter 'url' of method 'RoutingRulesManager.RoutingRulesManager(string)' from string to System.Uri, or provide an overload of 'RoutingRulesManager.RoutingRulesManager(string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AddNewRule(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Microsoft.Office.RecordsManagement.RecordsRepository.EcmDocumentRoutingWeb" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="178">'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)' creates a new instance of 'EcmDocumentRoutingWeb' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="163">The 'this' parameter (or 'Me' in Visual Basic) of 'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="173">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="166">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="163">Change the type of parameter 'url' of method 'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)' from string to System.Uri, or provide an overload of 'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="4#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="163">Change the type of parameter 'relativeFolderUrl' of method 'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)' from string to System.Uri, or provide an overload of 'RoutingRulesManager.AddNewRule(string, string, string, string, string, string, string, string, string, string, string)', that allows 'relativeFolderUrl' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetContentTypeIndices(Mtm.RecordsRouting.RecordDocument,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="118">Change 'List&lt;int&gt;' in 'RoutingRulesManager.GetContentTypeIndices(RecordDocument, bool)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Indices" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="118">Replace the term 'Indices' in member name 'RoutingRulesManager.GetContentTypeIndices(RecordDocument, bool)' with the preferred alternate 'Indexes'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ScanForCustomOrganizerRules(Microsoft.SharePoint.SPListCollection)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="RoutingRulesManager.cs" Line="347">The 'this' parameter (or 'Me' in Visual Basic) of 'RoutingRulesManager.ScanForCustomOrganizerRules(SPListCollection)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="XmlLookupNode" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetSentenceName()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupNode.cs" Line="77">Change 'XmlLookupNode.GetSentenceName()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSpFieldType()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupNode.cs" Line="92">Correct the casing of 'Sp' in member name 'XmlLookupNode.GetSpFieldType()' by changing it to 'SP'.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupNode.cs" Line="92">Change 'XmlLookupNode.GetSpFieldType()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error">The property name 'XmlLookupNode.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="XmlLookupReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsIdValid(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupReader.cs" Line="253">The 'this' parameter (or 'Me' in Visual Basic) of 'XmlLookupReader.IsIdValid(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsInternalNameUse(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupReader.cs" Line="201">The 'this' parameter (or 'Me' in Visual Basic) of 'XmlLookupReader.IsInternalNameUse(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupReader.cs" Line="202">In method 'XmlLookupReader.IsInternalNameUse(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupReader.cs" Line="202">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'XmlLookupReader.IsInternalNameUse(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsInternalNameValid(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupReader.cs" Line="227">The 'this' parameter (or 'Me' in Visual Basic) of 'XmlLookupReader.IsInternalNameValid(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTitleValid(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupReader.cs" Line="214">The 'this' parameter (or 'Me' in Visual Basic) of 'XmlLookupReader.IsTitleValid(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsTypeValid(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting" File="XmlLookupReader.cs" Line="240">The 'this' parameter (or 'Me' in Visual Basic) of 'XmlLookupReader.IsTypeValid(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LookupNodeList" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;XmlLookupNode&gt;' in 'XmlLookupReader.LookupNodeList' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Mtm.RecordsRouting.Features.MtmFeature">
       <Types>
        <Type Name="Feature1EventReceiver" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FeatureActivated(Microsoft.SharePoint.SPFeatureReceiverProperties)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Mtm.RecordsRouting.RecordCentreManager" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2012-07-13 16:12:53Z" FixCategory="NonBreaking">
             <Issue Name="ObjectCreation" Certainty="95" Level="Warning" Path="\\Dali\USF\eescobar\My Documents\Visual Studio 2010\Projects\Mtm.RecorsRouting\Mtm.RecorsRouting\Features\MtmFeature" File="MtmFeature.EventReceiver.cs" Line="27">'Feature1EventReceiver.FeatureActivated(SPFeatureReceiverProperties)' creates a new instance of 'RecordCentreManager' which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="OutsideDispose">{0} calls {1}, a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="ObjectCreation">{0} creates a new instance of {1} which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectMessage">Method {0} passes parameter name '{1}' as the {2} argument to a {3} constructor. Replace this argument with a descriptive message and pass the parameter name in the correct position.</Resolution>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>Normalize strings to uppercase</Name>
   <Description>Strings should be normalized to upper-case.</Description>
   <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
   <Name>URI properties should not be strings</Name>
   <Description>If a property name contains "uri" or "url" or "urn" and it's typed as string, it should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182175(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
